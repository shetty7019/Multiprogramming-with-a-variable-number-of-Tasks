{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red88\green138\blue67;\red255\green255\blue255;\red202\green202\blue202;
\red71\green137\blue205;\red194\green126\blue101;\red203\green203\blue202;}
{\*\expandedcolortbl;;\cssrgb\c41525\c59950\c33208;\cssrgb\c100000\c100000\c100000\c0;\cssrgb\c83229\c83229\c83125;
\cssrgb\c33936\c61427\c84130;\cssrgb\c80778\c56830\c46925;\cssrgb\c83320\c83320\c83112;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh15140\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #include<stdio.h>\cf4 \strokec4 \
\
int main()\{\
    \
    int ms,mp[10],n,temp,i\cf2 \strokec2 ;\cf4 \strokec4 \
    char \cf5 \strokec5 ch\cf4 \strokec4 =\cf6 \strokec6 'y'\cf2 \strokec2 ;\cf4 \strokec4 \
    printf(\cf6 \strokec6 "Enter the total memory size:"\cf4 \strokec4 )\cf2 \strokec2 ;\cf4 \strokec4 \
    scanf(\cf6 \strokec6 "%d\\n"\cf4 \strokec4 ,&ms)\cf2 \strokec2 ;\cf4 \strokec4 \
    \cf5 \strokec5 temp\cf4 \strokec4 =ms\cf2 \strokec2 ;\cf4 \strokec4 \
    \
    printf(\cf6 \strokec6 "Enter the number of processes:"\cf4 \strokec4 )\cf2 \strokec2 ;\cf4 \strokec4 \
    scanf(\cf6 \strokec6 "%d\\n"\cf4 \strokec4 ,&n)\cf2 \strokec2 ;\cf4 \strokec4 \
    for(\cf5 \strokec5 i\cf4 \strokec4 =0\cf2 \strokec2 ;ch=='y';i++)\{\cf4 \strokec4 \
        \
        \
        printf(\cf6 \strokec6 "\\nEnter the memory required for process %d "\cf4 \strokec4 ,i+1)\cf2 \strokec2 ;\cf4 \strokec4 \
        scanf(\cf6 \strokec6 "%d"\cf4 \strokec4 ,&mp[i])\cf2 \strokec2 ;\cf4 \strokec4 \
        \
        if(mp[i]<=ms)\
     \{\
         printf(\cf6 \strokec6 "Allocated\\n"\cf4 \strokec4 )\cf2 \strokec2 ;\cf4 \strokec4 \
            temp-=mp[i]\cf2 \strokec2 ;\cf4 \strokec4 \
    \}\
    else \
        printf(\cf6 \strokec6 "memory not enough"\cf4 \strokec4 )\cf2 \strokec2 ;\cf4 \strokec4 \
\
    printf(\cf6 \strokec6 "\\nDo you want to continue: y or n"\cf4 \strokec4 )\cf2 \strokec2 ;\cf4 \strokec4 \
    scanf(\cf6 \strokec6 "%c "\cf4 \strokec4 ,&ch)\cf2 \strokec2 ;\cf4 \strokec4 \
    \
    \}\
    printf(\cf6 \strokec6 "Process\\tMemory allocated\\n"\cf4 \strokec4 )\cf2 \strokec2 ;\cf4 \strokec4 \
    for(\cf5 \strokec5 i\cf4 \strokec4 =0\cf2 \strokec2 ;i<n;i++)\{\cf4 \strokec4 \
        \
        printf(\cf6 \strokec6 "%d\\t\\t%d\\n"\cf4 \strokec4 ,i+1,mp[i])\cf2 \strokec2 ;\cf4 \strokec4 \
    \}\
    printf(\cf6 \strokec6 "\\nTotal memory allocated: %d"\cf4 \strokec4 ,ms-temp)\cf2 \strokec2 ;\cf4 \strokec4 \
    printf(\cf6 \strokec6 "External fragmentation: %d"\cf4 \strokec4 ,temp)\cf2 \strokec2 ;\cf4 \strokec4 \
    \
    return 0\cf2 \strokec2 ;\cf4 \strokec4 \
\}\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \strokec7 \
}